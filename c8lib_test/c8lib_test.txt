 7 December 2023   9:35:53.899 AM
 
c8lib_test():
  Fortran90 version
  Test c8lib().
 
C8_ABS_TEST():
  c8_abs() computes the absolute value of a C8.
 
       C1=C8_UNIFORM_01          R2=C8_ABS(C1)             R3=ABS(C1)
     ---------------------     ---------------------     ---------------------
 
      0.366631    0.697426      0.787922                  0.787922
     -0.752295    0.583955      0.952339                  0.952339
      0.258628   -0.187842      0.319646                  0.319646
     -0.170051    0.517906      0.545109                  0.545109
     -0.271536    0.489288      0.559584                  0.559584
     -0.504193   -0.491191      0.703902                  0.703902
      0.212413   -0.134702      0.251524                  0.251524
      0.395135    0.200912      0.443280                  0.443280
      0.160113    0.065133      0.172854                  0.172854
     -0.148344   -0.810906      0.824363                  0.824363
 
c8_acos_test():
  c8_acos() computes the inverse cosine.
 
       C1=C8_UNIFORM_01          C2 = C8_ACOS(C1)           C3 = C8_COS(C2)
     ---------------------     ---------------------     ---------------------
 
      0.524291   -0.772806      1.158450    0.766281      0.524291   -0.772806
     -0.446680    0.155326      2.026555   -0.172132     -0.446680    0.155326
     -0.182792   -0.020350      1.754582    0.020697     -0.182792   -0.020350
     -0.700630   -0.063671      2.343227    0.088782     -0.700630   -0.063671
     -0.334358    0.014332      1.911680   -0.015207     -0.334358    0.014332
     -0.815475   -0.012921      2.523994    0.022312     -0.815475   -0.012921
     -0.754451    0.476508      2.266567   -0.586586     -0.754451    0.476508
      0.038537    0.312442      1.534007   -0.307772      0.038537    0.312442
     -0.305289   -0.366173      1.859996    0.373307     -0.305289   -0.366173
     -0.077944   -0.050572      1.648719    0.050705     -0.077944   -0.050572
 
C8_ACOSH_TEST
  C8_ACOSH computes the inverse hyperbolic cosine.
 
       C1=C8_UNIFORM_01          C2 = C8_ACOSH(C1)           C3 = COSH(C2)
     ---------------------     ---------------------     ---------------------
 
     -0.509780    0.438965      0.475438    2.045566     -0.509780    0.438965
      0.660798   -0.577042     -0.642747    0.995102      0.660798   -0.577042
      0.135411   -0.414230     -0.406237    1.445511      0.135411   -0.414230
      0.066679    0.282260      0.279201    1.506590      0.066679    0.282260
      0.006958   -0.046820     -0.046804    1.563846      0.006958   -0.046820
     -0.019437    0.127211      0.126894    1.590079     -0.019437    0.127211
      0.349312   -0.098315     -0.104654    1.215991      0.349312   -0.098315
     -0.376408    0.053510      0.057710    1.956037     -0.376408    0.053510
      0.137051    0.201363      0.201831    1.436083      0.137051    0.201363
     -0.205925   -0.052768     -0.053894    1.777900     -0.205925   -0.052768
 
C8_ADD_TEST
  C8_ADD adds two C8s
 
       C1=C8_UNIFORM_01          C2=C8_UNIFORM_01          C3 = C8_ADD(C1,C2)
     ---------------------     ---------------------     ---------------------
 
      0.060400    0.049651     -0.825240   -0.416478     -0.764840   -0.366827
     -0.016527   -0.016195      0.003107    0.003752     -0.013420   -0.012443
     -0.058882    0.829790     -0.079246    0.149538     -0.138128    0.979328
      0.524600   -0.490739     -0.014932    0.204183      0.509668   -0.286556
      0.061188    0.329687      0.765492    0.482333      0.826680    0.812020
      0.016173   -0.035819      0.011710   -0.015124      0.027883   -0.050943
     -0.052770   -0.006202     -0.084394    0.132776     -0.137164    0.126574
      0.050713    0.092237      0.676887    0.110648      0.727600    0.202885
     -0.671423   -0.385348     -0.083902   -0.162025     -0.755325   -0.547373
      0.500329    0.285127     -0.106114    0.259775      0.394215    0.544902
 
C8_ARG_TEST
  C8_ARG computes the argument of a C8.
 
       C1=C8_UNIFORM_01          R2=C8_ARG(C1)
     ---------------------     ---------------------
 
        0.4169     -0.1624        5.9118
        0.0485     -0.7331        4.7785
        0.0967     -0.7936        4.8337
        0.1257     -0.1188        5.5257
        0.8913     -0.0180        6.2630
       -0.0267     -0.4246        4.6495
       -0.4090     -0.3011        3.7763
        0.4851     -0.4268        5.5616
        0.0310     -0.0378        5.3993
       -0.0326     -0.1786        4.5321
 
C8_ASIN_TEST
  C8_ASIN computes the inverse sine.
 
       C1=C8_UNIFORM_01          C2 = C8_ASIN(C1)          C3 = C8_SIN(C2)
     ---------------------     ---------------------     ---------------------
 
      0.072698   -0.418571      0.067088   -0.408093      0.072698   -0.418571
      0.312967   -0.092003      0.316782   -0.096670      0.312967   -0.092003
      0.383156    0.150470      0.387843    0.161835      0.383156    0.150470
     -0.720975   -0.434673     -0.680586   -0.533594     -0.720975   -0.434673
     -0.045478   -0.122122     -0.045157   -0.121944     -0.045478   -0.122122
     -0.787443    0.295728     -0.809258    0.416428     -0.787443    0.295728
      0.521984   -0.553337      0.460187   -0.583845      0.521984   -0.553337
      0.206176   -0.522411      0.183095   -0.509023      0.206176   -0.522411
     -0.214711    0.347886     -0.203731    0.348156     -0.214711    0.347886
      0.650439   -0.599979      0.559619   -0.659188      0.650439   -0.599979
 
C8_ASINH_TEST
  C8_ASINH computes the inverse hyperbolic sine.
 
       C1=C8_UNIFORM_01          C2 = C8_ASINH(C1)         C3 = C8_SINH(C2)
     ---------------------     ---------------------     ---------------------
 
     -0.004992   -0.003741     -0.004992   -0.003741     -0.004992   -0.003741
     -0.726369    0.656855     -0.763869    0.526915     -0.726369    0.656855
      0.650214    0.026723      0.611541    0.022403      0.650214    0.026723
      0.545587   -0.379414      0.549568   -0.334756      0.545587   -0.379414
     -0.282618    0.359937     -0.296692    0.351872     -0.282618    0.359937
     -0.622180   -0.363411     -0.613860   -0.309163     -0.622180   -0.363411
     -0.288501    0.676809     -0.364950    0.686858     -0.288501    0.676809
      0.773472    0.418084      0.746261    0.329627      0.773472    0.418084
      0.098389    0.386969      0.106396    0.394979      0.098389    0.386969
      0.351067   -0.159085      0.348012   -0.150482      0.351067   -0.159085
 
C8_ATAN_TEST
  C8_ATAN computes the inverse tangent.
 
       C1=C8_UNIFORM_01          C2 = C8_ATAN(C1)          C3 = C8_TAN(C2)
     ---------------------     ---------------------     ---------------------
 
     -0.223102   -0.631001     -0.339875   -0.669821     -0.223102   -0.631001
      0.569534    0.120073      0.522425    0.090669      0.569534    0.120073
      0.329294    0.310980      0.345958    0.285497      0.329294    0.310980
     -0.314267   -0.629919     -0.447247   -0.614664     -0.314267   -0.629919
      0.000342    0.002544      0.000342    0.002544      0.000342    0.002544
      0.284097   -0.653621      0.428537   -0.660255      0.284097   -0.653621
     -0.127483   -0.056812     -0.127199   -0.055959     -0.127483   -0.056812
     -0.406990    0.877841     -0.746316    0.754455     -0.406990    0.877841
      0.118330    0.142285      0.120158    0.141212      0.118330    0.142285
     -0.066928    0.201954     -0.069647    0.203790     -0.066928    0.201954
 
C8_ATANH_TEST
  C8_ATANH computes the inverse hyperbolic tangent.
 
       C1=C8_UNIFORM_01          C2 = C8_ATANH(C1)         C3 = C8_TANH(C2)
     ---------------------     ---------------------     ---------------------
 
     -0.112763   -0.883826     -0.063195   -0.727353     -0.112763   -0.883826
      0.118245   -0.250980      0.111612   -0.249043      0.118245   -0.250980
     -0.366951   -0.493992     -0.296690   -0.504708     -0.366951   -0.493992
     -0.914184    0.239908     -1.012192    0.675978     -0.914184    0.239908
      0.021528    0.361855      0.019037    0.347328      0.021528    0.361855
      0.325029   -0.050584      0.336223   -0.056480      0.325029   -0.050584
     -0.390263    0.895215     -0.211532    0.772475     -0.390263    0.895215
     -0.003462    0.209072     -0.003317    0.206105     -0.003462    0.209072
      0.345142   -0.168083      0.347841   -0.187779      0.345142   -0.168083
      0.219328   -0.251879      0.208639   -0.257903      0.219328   -0.251879
 
C8_CONJ_TEST
  C8_CONJ computes the conjugate of a C8.
 
       C1=C8_UNIFORM_01          C2=C8_CONJ(C1)            C3=C8_CONJ(C2)
     ---------------------     ---------------------     ---------------------
 
        0.0965     -0.3663        0.0965      0.3663        0.0965     -0.3663
        0.8169     -0.5742        0.8169      0.5742        0.8169     -0.5742
        0.6504      0.0065        0.6504     -0.0065        0.6504      0.0065
        0.6696     -0.2471        0.6696      0.2471        0.6696     -0.2471
       -0.4201      0.1823       -0.4201     -0.1823       -0.4201      0.1823
       -0.0156     -0.8980       -0.0156      0.8980       -0.0156     -0.8980
       -0.7478      0.2862       -0.7478     -0.2862       -0.7478      0.2862
       -0.2041      0.4830       -0.2041     -0.4830       -0.2041      0.4830
       -0.1890     -0.2577       -0.1890      0.2577       -0.1890     -0.2577
        0.5065      0.7135        0.5065     -0.7135        0.5065      0.7135
 
C8_COS_TEST
  C8_COS computes the cosine of a C8.
 
        C1=C8_UNIFORM_01          C2=C8_COS(C1)             C3=C8_ACOS(C2)
     ---------------------     ---------------------     ---------------------
 
        0.5610     -0.2758        0.8791      0.1486        0.5610     -0.2758
        0.1307      0.7541        1.2870     -0.1078        0.1307      0.7541
       -0.4341     -0.1369        0.9157     -0.0578        0.4341      0.1369
        0.2676     -0.2310        0.9903      0.0616        0.2676     -0.2310
       -0.0563     -0.2205        1.0228     -0.0125        0.0563      0.2205
        0.1901      0.3427        1.0402     -0.0660        0.1901      0.3427
       -0.3852     -0.0731        0.9292     -0.0275        0.3852      0.0731
       -0.0208      0.0912        1.0039      0.0019        0.0208     -0.0912
       -0.5992     -0.0054        0.8258     -0.0031        0.5992      0.0054
       -0.3993      0.8712        1.2937      0.3832        0.3993     -0.8712
 
C8_COSH_TEST
  C8_COSH computes the hyperbolic cosine of a C8.
 
       C1=C8_UNIFORM_01          C2=C8_COSH(C1)          C3=C8_COSH(C2) 
     ---------------------     ---------------------     ---------------------
 
        0.5349      0.3474        1.0780      0.1909        0.5349      0.3474
        0.4829     -0.2818        1.0747     -0.1396       -0.4829      0.2818
       -0.3398     -0.3818        0.9821      0.1290        0.3398      0.3818
        0.0129      0.0960        0.9955      0.0012        0.0129      0.0960
       -0.0662      0.0091        1.0022     -0.0006       -0.0662      0.0091
       -0.1108      0.0417        1.0053     -0.0046       -0.1108      0.0417
        0.9097     -0.2731        1.3896     -0.2806       -0.9097      0.2731
       -0.0625      0.2912        0.9598     -0.0179       -0.0625      0.2912
       -0.1862     -0.1759        1.0017      0.0328        0.1862      0.1759
        0.0631      0.0492        1.0008      0.0031        0.0631      0.0492
 
C8_CUBE_ROOT_TEST
  C8_CUBE_ROOT computes the principal cube root of a C8.
 
        C1=C8_UNIFORM_01          C2=C8_CUBE_ROOT(C1)       C3=C2*C2*C2
     ---------------------     ---------------------     ---------------------
 
        0.1537     -0.7166       -0.0635      0.8994        0.1537     -0.7166
        0.1513      0.1272        0.5668      0.1345        0.1513      0.1272
        0.0020     -0.4269       -0.0012      0.7530        0.0020     -0.4269
        0.0119      0.2155        0.5249      0.2903        0.0119      0.2155
        0.2349      0.5698        0.7861      0.3261        0.2349      0.5698
        0.0058     -0.0009       -0.0817      0.1606        0.0058     -0.0009
       -0.8767      0.0464        0.4933      0.8207       -0.8767      0.0464
        0.6861      0.1116        0.8845      0.0476        0.6861      0.1116
        0.3379      0.4179        0.7774      0.2379        0.3379      0.4179
        0.3766      0.2263        0.7479      0.1364        0.3766      0.2263
 
        C1=C8_UNIFORM_01          C2=C1**(1.0/3.0)          C3=C2*C2*C2
     ---------------------     ---------------------     ---------------------
 
        0.2522      0.0128        0.6320      0.0106        0.2522      0.0128
        0.0041      0.0162        0.2313      0.1093        0.0041      0.0162
       -0.8366      0.1845        0.5331      0.7860       -0.8366      0.1845
        0.1171     -0.2016        0.5785     -0.2100        0.1171     -0.2016
        0.0151     -0.0045        0.2497     -0.0243        0.0151     -0.0045
       -0.6341      0.2248        0.5213      0.7043       -0.6341      0.2248
        0.0768      0.3438        0.6359      0.3074        0.0768      0.3438
       -0.0651      0.0504        0.2944      0.3202       -0.0651      0.0504
       -0.3492      0.5613        0.6612      0.5672       -0.3492      0.5613
       -0.5892     -0.4235        0.6001     -0.6688       -0.5892     -0.4235
 
C8_DIV_TEST
  C8_DIV computes C3 = C1 / C2.
 
        C1=C8_UNIFORM_01          C2=C8_UNIFORM_01          C3=C8_DIV(C1,C2)              C4=C1/C2
     ---------------------     ---------------------     ---------------------     ---------------------
 
       -0.1113      0.3880        0.1130      0.1146        1.2316      2.1848        1.2316      2.1848
        0.1915     -0.0716       -0.1569     -0.9413        0.0410      0.2102        0.0410      0.2102
       -0.0419     -0.8673       -0.6286     -0.7372        0.7092      0.5479        0.7092      0.5479
       -0.1870      0.2466       -0.0843      0.0321        2.9110     -1.8187        2.9110     -1.8187
       -0.6325      0.5333       -0.6338      0.1031        1.1055     -0.6616        1.1055     -0.6616
       -0.0693     -0.6029       -0.2007      0.1170       -1.0496      2.3924       -1.0496      2.3924
       -0.1746      0.0218       -0.5699      0.4520        0.2067      0.1257        0.2067      0.1257
        0.1545      0.4829        0.1136      0.4319        1.1337     -0.0596        1.1337     -0.0596
        0.3483      0.0637       -0.3547     -0.2220       -0.7864      0.3126       -0.7864      0.3126
       -0.0018     -0.0617       -0.0367     -0.0953        0.5704      0.2009        0.5704      0.2009
 
C8_DIV_R8_TEST
  C8_DIV_R8 computes C3 = C1 / R2.
 
        C1=C8_UNIFORM_01          R2=RANDOM_NUMBER          C3=C8_DIV(C1,C2)              C4=C1/C2
     ---------------------     ---------------------     ---------------------     ---------------------
 
       -0.0201      0.1424        0.6209                   -0.0324      0.2293       -0.0324      0.2293
       -0.7680     -0.0913        0.9897                   -0.7759     -0.0922       -0.7759     -0.0922
       -0.0514     -0.7288        0.2642                   -0.1944     -2.7579       -0.1944     -2.7579
        0.2405     -0.3507        0.7539                    0.3191     -0.4652        0.3191     -0.4652
       -0.3795      0.7824        0.5720                   -0.6634      1.3678       -0.6634      1.3678
       -0.0537     -0.3873        0.5095                   -0.1054     -0.7602       -0.1054     -0.7602
       -0.2359     -0.7834        0.9427                   -0.2503     -0.8311       -0.2503     -0.8311
       -0.5076     -0.5808        0.2913                   -1.7428     -1.9941       -1.7428     -1.9941
        0.8802     -0.0361        0.9435                    0.9329     -0.0383        0.9329     -0.0383
       -0.1760      0.0027        0.3366                   -0.5229      0.0079       -0.5229      0.0079
 
C8_EXP_TEST
  C8_EXP computes exp ( Z ).
 
        C1=C8_UNIFORM_01          C2=C8_EXP(C1)             C3=C8_LOG(C2)
     ---------------------     ---------------------     ---------------------
 
       -0.9886      0.0692        0.3712      0.0257       -0.9886      0.0692
        0.2635      0.9470        0.7602      1.0564        0.2635      0.9470
        0.2140     -0.4215        1.1303     -0.5068        0.2140      5.8617
        0.4004      0.0790        1.4877      0.1178        0.4004      0.0790
       -0.4137      0.1676        0.6519      0.1103       -0.4137      0.1676
        0.1280      0.2119        1.1112      0.2390        0.1280      0.2119
       -0.0320     -0.0173        0.9684     -0.0167       -0.0320      6.2659
       -0.5657     -0.1528        0.5613     -0.0865       -0.5657      6.1304
       -0.2102      0.1329        0.8033      0.1074       -0.2102      0.1329
       -0.0877     -0.0153        0.9159     -0.0140       -0.0877      6.2679
 
C8_IMAG_TEST
  C8_IMAG computes the imaginary part of a C8.
 
       C1=C8_UNIFORM_01          R2=C8_IMAG(C1)             R3=IMAG(C1)
     ---------------------     ---------------------     ---------------------
 
      0.382461   -0.403808     -0.403808                 -0.403808
      0.187369   -0.639840     -0.639840                 -0.639840
      0.813288   -0.112159     -0.112159                 -0.112159
      0.791039   -0.011843     -0.011843                 -0.011843
      0.388646   -0.678121     -0.678121                 -0.678121
      0.187429   -0.766304     -0.766304                 -0.766304
      0.545866   -0.252368     -0.252368                 -0.252368
     -0.819738   -0.457622     -0.457622                 -0.457622
      0.664746   -0.142887     -0.142887                 -0.142887
      0.183326    0.370601      0.370601                  0.370601
 
C8_I_TEST
  C8_I returns the imaginary unit.

  C1 = C8_I ( ) =  (   0.00000    ,   1.00000    )
  C2 = C1 * C1 =  (  -1.00000    ,   0.00000    )
 
C8_INV_TEST
  C8_INV computes C2 = 1 / C1.
 
        C1=C8_UNIFORM_01          C2=C8_INV(C1)             C3=C8_INV(C2)
     ---------------------     ---------------------     ---------------------
 
       -0.7002      0.5951       -0.8292     -0.7047       -0.7002      0.5951
       -0.3735     -0.8618       -0.4234      0.9769       -0.3735     -0.8618
        0.3003     -0.1736        2.4961      1.4426        0.3003     -0.1736
       -0.2890     -0.1952       -2.3763      1.6045       -0.2890     -0.1952
        0.0772      0.0949        5.1579     -6.3405        0.0772      0.0949
       -0.6527      0.5263       -0.9284     -0.7486       -0.6527      0.5263
        0.6145      0.7857        0.6177     -0.7897        0.6145      0.7857
       -0.2625     -0.0548       -3.6505      0.7622       -0.2625     -0.0548
       -0.1713      0.1516       -3.2743     -2.8977       -0.1713      0.1516
       -0.8620      0.3435       -1.0012     -0.3989       -0.8620      0.3435
 
C8_LE_L1_TEST
  C8_LE_L1 evalues (C1 <= C2) using the L1 norm.
 
        C1=C8_UNIFORM_01          C2=C8_UNIFORM_01         L3=C8_LE_L1(C1,C2)
     ---------------------     ---------------------     ---------------------
 
       -0.0311     -0.0101       -0.1243      0.0283        T
       -0.3349     -0.0508       -0.2787     -0.8897        T
        0.0891      0.2106       -0.9096     -0.2773        T
        0.1501     -0.6899        0.9531      0.0605        T
        0.2224      0.3180        0.3836      0.7339        T
       -0.1035     -0.0015       -0.2868      0.8719        T
        0.0468      0.1919        0.2309      0.3988        T
        0.0533     -0.0755       -0.0200      0.6372        T
        0.3996      0.2796        0.3582     -0.3333        T
        0.2112     -0.0399       -0.0079     -0.0390        F
 
C8_LE_L2_TEST
  C8_LE_L2 evalues (C1 <= C2) using the L2 norm.
 
        C1=C8_UNIFORM_01          C2=C8_UNIFORM_01         L3=C8_LE_L2(C1,C2)
     ---------------------     ---------------------     ---------------------
 
       -0.3443      0.0265       -0.1523      0.9099        T
        0.3584     -0.8264       -0.5774      0.4105        F
        0.3250      0.1219       -0.0082      0.0129        F
       -0.0862     -0.0207       -0.0226     -0.5914        T
       -0.1422      0.1335        0.2073      0.0874        T
        0.0824     -0.0085       -0.3362      0.3669        T
       -0.7815     -0.1032        0.8449     -0.3832        T
       -0.7572     -0.3658        0.6129      0.1841        F
        0.0453     -0.0275        0.6729      0.4763        T
        0.0016     -0.0009        0.0361     -0.7468        T
 
C8_LE_LI_TEST
  C8_LE_LI evalues (C1 <= C2) using the Loo norm.
 
        C1=C8_UNIFORM_01          C2=C8_UNIFORM_01         L3=C8_LE_LI(C1,C2)
     ---------------------     ---------------------     ---------------------
 
        0.3988     -0.1218        0.2376     -0.1073        F
       -0.2851      0.6198       -0.2298     -0.3302        F
       -0.7916      0.1206        0.4602      0.2006        F
        0.0029     -0.0272        0.0914     -0.2172        T
       -0.0538     -0.0260       -0.2155      0.4267        T
        0.1654     -0.0276        0.2661      0.2836        T
       -0.5763     -0.3608        0.6118      0.3257        T
        0.5993      0.6193       -0.6706     -0.3635        T
       -0.0940     -0.4781       -0.0087      0.0245        F
        0.2083      0.0417       -0.2784      0.3008        T
 
C8_LOG_TEST
  C8_LOG computes log ( Z ).
 
        C1=C8_UNIFORM_01          C2=C8_LOG(C1)             C3=C8_EXP(C2)
     ---------------------     ---------------------     ---------------------
 
       -0.0466      0.0597       -2.5804      2.2328       -0.0466      0.0597
        0.3888     -0.6815       -0.2425      5.2308        0.3888     -0.6815
       -0.6329      0.6810       -0.0729      2.3197       -0.6329      0.6810
        0.3459     -0.1397       -0.9861      5.8993        0.3459     -0.1397
       -0.1695      0.5929       -0.4835      1.8492       -0.1695      0.5929
       -0.2953      0.1168       -1.1470      2.7651       -0.2953      0.1168
        0.3286     -0.3863       -0.6790      5.4173        0.3286     -0.3863
       -0.0173     -0.1019       -2.2701      4.5445       -0.0173     -0.1019
        0.0756     -0.1084       -2.0239      5.3210        0.0756     -0.1084
       -0.1935      0.2191       -1.2300      2.2943       -0.1935      0.2191
 
C8_MAG_TEST
  C8_MAG computes the magnitude of a C8.
 
       C1=C8_UNIFORM_01          R2=C8_MAG(C1)
     ---------------------     ---------------------
 
       -0.4883      0.6848        0.8411
       -0.4115     -0.4379        0.6009
        0.4580      0.1758        0.4906
       -0.6993     -0.3276        0.7722
        0.1892      0.6178        0.6461
        0.2645      0.2417        0.3583
       -0.7484      0.4028        0.8499
       -0.2889     -0.0560        0.2943
       -0.6159      0.2579        0.6677
        0.5619      0.2173        0.6025
 
C8_MUL_TEST
  C8_MUL computes C3 = C1 * C2.
 
        C1=C8_UNIFORM_01          C2=C8_UNIFORM_01          C3=C8_MUL(C1,C2)          C4=C1*C2
     ---------------------     ---------------------     ---------------------     ---------------------
 
        0.2366     -0.5189       -0.2499      0.4052        0.1511      0.2256        0.1511      0.2256
       -0.3339      0.2014        0.0059     -0.3340        0.0653      0.1127        0.0653      0.1127
       -0.3844      0.0393       -0.0274     -0.3389        0.0239      0.1292        0.0239      0.1292
       -0.5751      0.3068        0.9973     -0.0281       -0.5649      0.3221       -0.5649      0.3221
       -0.1449     -0.3432       -0.9149      0.0364        0.1450      0.3087        0.1450      0.3087
       -0.4907      0.3880        0.2205      0.6050       -0.3429     -0.2113       -0.3429     -0.2113
        0.0729     -0.0088        0.0699     -0.0593        0.0046     -0.0049        0.0046     -0.0049
        0.4249      0.2447       -0.1033      0.1151       -0.0721      0.0236       -0.0721      0.0236
       -0.1815     -0.8033        0.2147      0.8913        0.6769     -0.3342        0.6769     -0.3342
       -0.1650      0.1819       -0.7240      0.1879        0.0853     -0.1627        0.0853     -0.1627
 
C8_NINT_TEST
  C8_NINT computes the nearest integer to a C8.
 
       C1=10*C8_UNIFORM_01      C2=C8_NINT(C1)
     ---------------------     ---------------------
 
     -0.839625    4.304197     -1.000000    4.000000
      3.523938   -0.189314      4.000000    0.000000
     -1.759083    0.873440     -2.000000    1.000000
      0.051988    0.061003      0.000000    0.000000
      9.674711    0.164389     10.000000    0.000000
     -5.855916   -0.187230     -6.000000    0.000000
      2.513131    1.809744      3.000000    2.000000
     -1.910092    4.084362     -2.000000    4.000000
     -5.683197    7.373813     -6.000000    7.000000
      7.336631    4.872953      7.000000    5.000000
 
C8_NORM_L1_TEST
  C8_NORM_L1 computes the L1 norm of a C8.
 
       C1=C8_UNIFORM_01          R2=C8_NORM_L1(C1)
     ---------------------     ---------------------
 
     -0.869995   -0.473446      1.343442
     -0.296571    0.829552      1.126123
      0.092229   -0.407493      0.499722
      0.206986   -0.015890      0.222875
     -0.540008   -0.426193      0.966201
     -0.026895   -0.633502      0.660397
      0.047391   -0.605906      0.653297
      0.018394   -0.099934      0.118329
     -0.023387    0.261108      0.284495
     -0.149779   -0.184690      0.334469
 
C8_NORM_L2_TEST
  C8_NORM_L2 computes the L2 norm of a C8.
 
       C1=C8_UNIFORM_01          R2=C8_NORM_L2(C1)
     ---------------------     ---------------------
 
     -0.050344    0.131251      0.140575
     -0.165028    0.574517      0.597749
      0.655708    0.181667      0.680409
      0.000654   -0.000946      0.001150
     -0.084593   -0.100660      0.131485
      0.540682    0.441000      0.697723
      0.070212    0.172508      0.186249
      0.207335   -0.271765      0.341825
     -0.848803    0.074589      0.852074
     -0.584997   -0.072151      0.589430
 
C8_NORM_LI_TEST
  C8_NORM_LI computes the Loo norm of a C8.
 
       C1=C8_UNIFORM_01          R2=C8_NORM_LI(C1)
     ---------------------     ---------------------
 
     -0.541617    0.413943      0.541617
     -0.032590    0.305557      0.305557
      0.707113    0.330871      0.707113
     -0.334593    0.006739      0.334593
      0.353743   -0.132098      0.353743
      0.066888   -0.287566      0.287566
     -0.443989   -0.690057      0.690057
      0.711973   -0.278734      0.711973
     -0.113706    0.383603      0.383603
     -0.566020   -0.418696      0.566020
 
C8_NORMAL_01_TEST
  C8_NORMAL_01 generates unit pseudonormal C8s
 
       C1=C8_NORMAL_01( )
     ---------------------
 
   -0.170590     -0.479296    
    0.452652      0.224992    
    0.874676      0.751166    
   -0.138815      -1.26576    
     1.21645      0.569412    
     2.02795      0.411955    
     1.05559     -0.244223E-01
    0.370885     -0.196920    
   -0.599979E-02 -0.701284    
    0.242756     -0.596550    
   -0.218151      0.196151    
     1.23113       2.01578    
   -0.703113       1.07590    
   -0.956312E-01  0.374349    
   -0.579096     -0.724992    
   -0.721057     -0.539776    
   -0.837557      0.286008    
    0.400128      0.476022    
    -1.01066      0.495808    
    0.459586      0.450121    
 
C8_ONE_TEST
  C8_ONE returns 1 as a C8.

  C1 = C8_ONE ( ) =  (   1.00000    ,   0.00000    )
  C2 = C1 + C1 =  (   2.00000    ,   0.00000    )
 
C8_PRINT_TEST
  C8_PRINT prints a C8.
 
  Zero:  (   0.00000    ,   0.00000    )
  One:  (   1.00000    ,   0.00000    )
  Pi:  (   3.14159    ,   0.00000    )
  i:  (   0.00000    ,   1.00000    )
  1+2i:  (   1.00000    ,   2.00000    )
 -12.34 + 56.78i:  (  -12.3400    ,   56.7800    )
  1E-3 + 2E-6i:  (  0.100000E-02,  0.200000E-05)
  3E8 - 4.5E9i:  (  0.300000E+09, -0.450000E+10)
 
C8_REAL_TEST
  C8_REAL computes the real part of a C8.
 
       C1=C8_UNIFORM_01          R2=C8_REAL(C1)             R3=REAL(C1)
     ---------------------     ---------------------     ---------------------
 
      0.129729    0.329334      0.129729                  0.129729
      0.423029   -0.059195      0.423029                  0.423029
      0.326109    0.289221      0.326109                  0.326109
     -0.298995    0.211498     -0.298995                 -0.298995
     -0.623261    0.347060     -0.623261                 -0.623261
      0.152401    0.113593      0.152401                  0.152401
     -0.427496    0.804985     -0.427496                 -0.427496
     -0.435230    0.699139     -0.435230                 -0.435230
      0.049761   -0.747471      0.049761                  0.049761
     -0.200692    0.125249     -0.200692                 -0.200692
 
C8_SIN_TEST
  C8_SIN computes the sine of a C8.
 
        C1=C8_UNIFORM_01          C2=C8_SIN(C1)             C3=C8_ASIN(C2)
     ---------------------     ---------------------     ---------------------
 
       -0.0801      0.1911       -0.0814      0.1917       -0.0801      0.1911
        0.4842      0.7537        0.6041      0.7321        0.4842      0.7537
        0.4649      0.2748        0.4654      0.2488        0.4649      0.2748
       -0.9348     -0.1991       -0.8204     -0.1190       -0.9348     -0.1991
        0.5327     -0.2897        0.5293     -0.2530        0.5327     -0.2897
        0.4792      0.1973        0.4701      0.1762        0.4792      0.1973
       -0.4883     -0.3573       -0.4994     -0.3223       -0.4883     -0.3573
       -0.0202      0.0036       -0.0202      0.0036       -0.0202      0.0036
       -0.7534     -0.2200       -0.7007     -0.1618       -0.7534     -0.2200
        0.2655      0.1354        0.2648      0.1310        0.2655      0.1354
 
C8_SINH_TEST
  C8_SINH computes the hyperbolic sine of a C8.
 
       C1=C8_UNIFORM_01          C2=C8_SINH(C1)          C3=C8_SINH(C2) 
     ---------------------     ---------------------     ---------------------
 
        0.0895     -0.0723        0.0894     -0.0725        0.0895     -0.0723
       -0.0953      0.0350       -0.0953      0.0352       -0.0953      0.0350
       -0.4030     -0.3615       -0.3873     -0.3828       -0.4030     -0.3615
       -0.1147      0.1412       -0.1138      0.1417       -0.1147      0.1412
       -0.1859     -0.6456       -0.1493     -0.6121       -0.1859     -0.6456
       -0.8852      0.0635       -1.0034      0.0900       -0.8852      0.0635
       -0.4797      0.4302       -0.4529      0.4659       -0.4797      0.4302
       -0.0360     -0.1585       -0.0355     -0.1579       -0.0360     -0.1585
        0.2445     -0.7096        0.1873     -0.6711        0.2445     -0.7096
        0.2444     -0.4607        0.2211     -0.4579        0.2444     -0.4607
 
C8_SQRT_TEST
  C8_SQRT computes the principal square root of a C8.
 
        C1=C8_UNIFORM_01          C2=C8_SQRT(C1)            C3=C2*C2
     ---------------------     ---------------------     ---------------------
 
       -0.0545     -0.0092       -0.0197      0.2343       -0.0545     -0.0092
        0.0650     -0.1897       -0.3644      0.2603        0.0650     -0.1897
        0.2151     -0.0541       -0.4674      0.0578        0.2151     -0.0541
        0.0802     -0.2080       -0.3893      0.2672        0.0802     -0.2080
       -0.8803      0.1779        0.0943      0.9430       -0.8803      0.1779
        0.5349     -0.4137       -0.7782      0.2658        0.5349     -0.4137
        0.4908      0.0540        0.7016      0.0385        0.4908      0.0540
        0.9437      0.0541        0.9718      0.0278        0.9437      0.0541
        0.5461     -0.5932       -0.8223      0.3607        0.5461     -0.5932
        0.0568      0.4478        0.5041      0.4442        0.0568      0.4478
 
        C1=C8_UNIFORM_01          C2=SQRT(C1)               C3=C2*C2
     ---------------------     ---------------------     ---------------------
 
        0.4408     -0.1447        0.6726     -0.1076        0.4408     -0.1447
        0.2948     -0.8288        0.7663     -0.5408        0.2948     -0.8288
        0.8052     -0.5057        0.9370     -0.2698        0.8052     -0.5057
        0.7739     -0.0276        0.8799     -0.0157        0.7739     -0.0276
        0.5918     -0.1541        0.7756     -0.0993        0.5918     -0.1541
        0.0213      0.0054        0.1470      0.0184        0.0213      0.0054
        0.2921     -0.0508        0.5425     -0.0468        0.2921     -0.0508
       -0.3893     -0.8732        0.5323     -0.8202       -0.3893     -0.8732
       -0.0294     -0.0125        0.0357     -0.1751       -0.0294     -0.0125
       -0.7257     -0.0607        0.0356     -0.8526       -0.7257     -0.0607
 
C8_SUB_TEST
  C8_SUB subtracts two C8s
 
       C1=C8_UNIFORM_01          C2=C8_UNIFORM_01          C3 = C8_SUB(C1,C2)
     ---------------------     ---------------------     ---------------------
 
      0.168755    0.400353      0.797143    0.062574     -0.628388    0.337779
     -0.548222   -0.816275      0.385493   -0.534114     -0.933715   -0.282161
     -0.138544    0.399554      0.007065    0.002955     -0.145609    0.396600
      0.106251   -0.407433      0.072921    0.200629      0.033329   -0.608063
      0.424311   -0.036300      0.180994    0.391588      0.243316   -0.427888
      0.784507    0.243927      0.239765   -0.456575      0.544741    0.700502
      0.153038    0.113000     -0.089316   -0.092833      0.242354    0.205833
      0.908584    0.228554     -0.167534    0.130333      1.076118    0.098221
     -0.233165    0.395736      0.163631    0.038277     -0.396796    0.357458
      0.165472   -0.529776      0.415595    0.002851     -0.250123   -0.532627
 
C8_TAN_TEST
  C8_TAN computes the tangent of a C8.
 
       C1=C8_UNIFORM_01          C2=C8_TAN(C1)             C3=C8_ATAN(C2)
     ---------------------     ---------------------     ---------------------
 
        0.2714     -0.0992        0.2754     -0.1064        0.2714     -0.0992
       -0.1826     -0.0923       -0.1830     -0.0951       -0.1826     -0.0923
       -0.4374     -0.5222       -0.3429     -0.5563       -0.4374     -0.5222
        0.0544      0.4360        0.0452      0.4113        0.0544      0.4360
        0.1141      0.0814        0.1138      0.0823        0.1141      0.0814
       -0.1795     -0.8233       -0.0969     -0.6888       -0.1795     -0.8233
       -0.1107      0.4406       -0.0919      0.4184       -0.1107      0.4406
       -0.3251      0.3136       -0.3028      0.3347       -0.3251      0.3136
       -0.4753     -0.7704       -0.2693     -0.7368       -0.4753     -0.7704
        0.5264      0.2973        0.5180      0.3758        0.5264      0.2973
 
C8_TANH_TEST
  C8_TANH computes the tangent of a C8.
 
       C1=C8_UNIFORM_01          C2=C8_TANH(C1)           C3=C8_ATANH(C2)
     ---------------------     ---------------------    ---------------------
 
       -0.5931     -0.4342       -0.6094     -0.3133       -0.5931     -0.4342
       -0.2834      0.4546       -0.3359      0.4434       -0.2834      0.4546
       -0.1749      0.1396       -0.1765      0.1363       -0.1749      0.1396
       -0.0026      0.0095       -0.0026      0.0095       -0.0026      0.0095
        0.1011     -0.3530        0.1143     -0.3642        0.1011     -0.3530
        0.4998      0.0336        0.4623      0.0264        0.4998      0.0336
        0.3141     -0.1025        0.3071     -0.0933        0.3141     -0.1025
       -0.7562     -0.5651       -0.7695     -0.3224       -0.7562     -0.5651
        0.5310     -0.5337        0.6059     -0.4168        0.5310     -0.5337
       -0.7363     -0.0849       -0.6296     -0.0515       -0.7363     -0.0849
 
C8_TO_CARTESIAN_TEST
  C8_TO_CARTESIAN converts C8 to (X,Y).
 
        C1=C8_UNIFORM_01    (X2,Y2)=C8_TO_CARTESIAN(C1)     C3=CARTESIAN_TO_C8(X2,Y2)
     ---------------------     ---------------------     ---------------------
 
        0.4080      0.0499        0.4080      0.0499        0.4080      0.0499
       -0.0024     -0.0033       -0.0024     -0.0033       -0.0024     -0.0033
        0.1922      0.3509        0.1922      0.3509        0.1922      0.3509
       -0.1800     -0.4085       -0.1800     -0.4085       -0.1800     -0.4085
       -0.2344     -0.0958       -0.2344     -0.0958       -0.2344     -0.0958
       -0.0309     -0.4427       -0.0309     -0.4427       -0.0309     -0.4427
        0.1942      0.3284        0.1942      0.3284        0.1942      0.3284
        0.2281     -0.1303        0.2281     -0.1303        0.2281     -0.1303
       -0.0720      0.7420       -0.0720      0.7420       -0.0720      0.7420
       -0.1379      0.3700       -0.1379      0.3700       -0.1379      0.3700
 
C8_TO_POLAR_TEST
  C8_TO_POLAR converts C8 to (R,T).
 
        C1=C8_UNIFORM_01       (R2,T2)=C8_TO_POLAR(C1)     C3=POLAR_TO_C8(R2,T2)
     ---------------------     ---------------------     ---------------------
 
        0.3501     -0.9329        0.9964      5.0714        0.3501     -0.9329
       -0.2852     -0.2843        0.4027      3.9254       -0.2852     -0.2843
        0.5190      0.3083        0.6036      0.5360        0.5190      0.3083
       -0.1421      0.2057        0.2500      2.1754       -0.1421      0.2057
        0.9125      0.2183        0.9383      0.2349        0.9125      0.2183
       -0.4379     -0.0415        0.4399      3.2361       -0.4379     -0.0415
       -0.3310     -0.2267        0.4012      3.7422       -0.3310     -0.2267
        0.3408     -0.8336        0.9006      5.1004        0.3408     -0.8336
       -0.2479     -0.3971        0.4681      4.1544       -0.2479     -0.3971
        0.5480      0.2805        0.6157      0.4731        0.5480      0.2805
 
C8_UNIFORM_01_TEST
  C8_UNIFORM_01 returns a uniformly random "unit" C8.
 
       C1=C8_UNIFORM_01( )
     ---------------------
 
        0.7035      0.0046
        0.2543      0.1249
        0.3434     -0.5998
       -0.4915     -0.0026
        0.5587      0.0298
        0.8942     -0.0061
       -0.1476     -0.0555
        0.7761      0.0690
       -0.1048      0.7115
        0.2602      0.4027
 
C8_ZERO_TEST
  C8_ZERO returns 0 as a C8.

  C1 = C8_ZERO ( ) =  (   0.00000    ,   0.00000    )
 
C8MAT_IDENTITY_TEST
  C8MAT_IDENTITY returns the complex identity matrix.
 
  The C8MAT_IDENTITY matrix:
 
  Col:          1                   2                   3                   4          
  Row
  ---
    1:  1.00                0.00                0.00                0.00              
    2:  0.00                1.00                0.00                0.00              
    3:  0.00                0.00                1.00                0.00              
    4:  0.00                0.00                0.00                1.00              
 
C8MAT_INDICATOR_TEST
  C8MAT_INDICATOR returns the complex indicator matrix.
 
  The C8MAT_INDICATOR matrix:
 
  Col:          1                   2                   3                   4          
  Row
  ---
    1:  1.00      1.00      1.00      2.00      1.00      3.00      1.00      4.00    
    2:  2.00      1.00      2.00      2.00      2.00      3.00      2.00      4.00    
    3:  3.00      1.00      3.00      2.00      3.00      3.00      3.00      4.00    
    4:  4.00      1.00      4.00      2.00      4.00      3.00      4.00      4.00    
    5:  5.00      1.00      5.00      2.00      5.00      3.00      5.00      4.00    
 
C8MAT_NORM_FRO_TEST
  C8MAT_NORM_FRO returns the Frobenius norm of a matrix.
 
  The C8MAT_INDICATOR matrix:
 
  Col:          1                   2                   3                   4          
  Row
  ---
    1:  1.00      1.00      1.00      2.00      1.00      3.00      1.00      4.00    
    2:  2.00      1.00      2.00      2.00      2.00      3.00      2.00      4.00    
    3:  3.00      1.00      3.00      2.00      3.00      3.00      3.00      4.00    
    4:  4.00      1.00      4.00      2.00      4.00      3.00      4.00      4.00    
    5:  5.00      1.00      5.00      2.00      5.00      3.00      5.00      4.00    

  The Frobenius norm =    19.2354    
 
C8MAT_NORM_L1_TEST
  C8MAT_NORM_L1 returns the L1 norm of a matrix.
 
  The C8MAT_INDICATOR matrix:
 
  Col:          1                   2                   3                   4          
  Row
  ---
    1:  1.00      1.00      1.00      2.00      1.00      3.00      1.00      4.00    
    2:  2.00      1.00      2.00      2.00      2.00      3.00      2.00      4.00    
    3:  3.00      1.00      3.00      2.00      3.00      3.00      3.00      4.00    
    4:  4.00      1.00      4.00      2.00      4.00      3.00      4.00      4.00    
    5:  5.00      1.00      5.00      2.00      5.00      3.00      5.00      4.00    

  The L1 norm =    25.6552    
 
C8MAT_NORM_LI_TEST
  C8MAT_NORM_LI returns the Loo norm of a C8MAT.
 
  The C8MAT_INDICATOR matrix:
 
  Col:          1                   2                   3                   4          
  Row
  ---
    1:  1.00      1.00      1.00      2.00      1.00      3.00      1.00      4.00    
    2:  2.00      1.00      2.00      2.00      2.00      3.00      2.00      4.00    
    3:  3.00      1.00      3.00      2.00      3.00      3.00      3.00      4.00    
    4:  4.00      1.00      4.00      2.00      4.00      3.00      4.00      4.00    
    5:  5.00      1.00      5.00      2.00      5.00      3.00      5.00      4.00    

  The Loo norm =    22.7183    
 
C8MAT_UNIFORM_01_TEST
  C8MAT_UNIFORM_01 computes a "random" complex matrix.
 
  The matrix:
 
  Col:          1                   2                   3                   4          
  Row
  ---
    1:-0.688    -0.568     0.126    -0.797E-01-0.358     0.506     0.461E-01 0.328E-01
    2: 0.340E-01-0.761     0.575    -0.919E-01-0.233     0.474     0.536     0.509    
    3:-0.231     0.391     0.520    -0.386     0.415    -0.327    -0.174E-01-0.728    
    4: 0.575     0.641E-01 0.837    -0.356E-01 0.114     0.511     0.288    -0.816E-01
    5: 0.103     0.755    -0.190    -0.154     0.699E-01-0.374E-01 0.245E-01-0.186    
 
C8VEC_INDICATOR_TEST
  C8VEC_INDICATOR sets A = (1-1i,2-2i,...,N-Ni)
 
  The "indicator" vector:
 
         1     1.00000      -1.00000    
         2     2.00000      -2.00000    
         3     3.00000      -3.00000    
         4     4.00000      -4.00000    
         5     5.00000      -5.00000    
         6     6.00000      -6.00000    
         7     7.00000      -7.00000    
         8     8.00000      -8.00000    
         9     9.00000      -9.00000    
        10     10.0000      -10.0000    
 
C8VEC_NINT_TEST
  C8VEC_NINT rounds a complex vector.
 
  The initial vector:
 
         1     1.54226      -4.12859    
         2    0.727945E-01  0.987535    
         3    0.158135      -1.47203    
         4   -0.245725      -4.30481    
         5    -1.00680      0.753890    
 
  The rounded vector:
 
         1     2.00000      -4.00000    
         2     0.00000       1.00000    
         3     0.00000      -1.00000    
         4     0.00000      -4.00000    
         5    -1.00000       1.00000    
 
C8VEC_NORM_L1_TEST
  C8VEC_NORM_L1 returns the L1 norm of a C8VEC.
 
  The C8VEC_INDICATOR vector:
 
         1     1.00000      -1.00000    
         2     2.00000      -2.00000    
         3     3.00000      -3.00000    
         4     4.00000      -4.00000    
         5     5.00000      -5.00000    

  The L1 norm =    21.2132    
 
C8VEC_NORM_L2_TEST
  C8VEC_NORM_L2 returns the L2 norm of a C8VEC.
 
  The C8VEC_INDICATOR vector:
 
         1     1.00000      -1.00000    
         2     2.00000      -2.00000    
         3     3.00000      -3.00000    
         4     4.00000      -4.00000    
         5     5.00000      -5.00000    

  The L2 norm =    10.4881    
 
C8VEC_NORM_LI_TEST
  C8VEC_NORM_LI returns the Loo norm of a C8VEC.
 
  The C8VEC_INDICATOR vector:
 
         1     1.00000      -1.00000    
         2     2.00000      -2.00000    
         3     3.00000      -3.00000    
         4     4.00000      -4.00000    
         5     5.00000      -5.00000    

  The Loo norm =    7.07107    
 
c8vec_normal_01_test():
  c8vec_normal_01() computes a vector of Normal 01 values.
 
  Vector of Normal 01 values:
 
         1   -0.324145     -0.800410    
         2   -0.552428     -0.748394    
         3     1.11587       1.58644    
         4   -0.771391       1.25548    
         5    0.249323E-01   1.67065    
         6    0.425331       1.71135    
         7   -0.254955     -0.803274    
         8    -1.18582      0.503750    
         9     2.79625      0.334670    
        10    -1.18105      0.527905    
 
C8VEC_PRINT_TEST
  C8VEC_PRINT prints a C8VEC.
 
  The C8VEC_INDICATOR vector:
 
         1     1.00000      -1.00000    
         2     2.00000      -2.00000    
         3     3.00000      -3.00000    
         4     4.00000      -4.00000    
         5     5.00000      -5.00000    
 
C8VEC_PRINT_PART_TEST
  C8VEC_PRINT_PART prints part of a C8VEC.
 
  Part of the C8VEC:
 
         1:    1.00000        -1.00000    
         2:    2.00000        -2.00000    
         3:    3.00000        -3.00000    
         4:    4.00000        -4.00000    
         5:    5.00000        -5.00000    
         6:    6.00000        -6.00000    
         7:    7.00000        -7.00000    
         8:    8.00000        -8.00000    
  ........  ..............  ..............
       100:    100.000        -100.000    
 
C8VEC_SORT_A_L1_TEST
  C8VEC_SORT_A_L1 sorts a C8VEC by L1 norm.
 
  The unsorted vector
 
         1    0.574661     -0.790899    
         2    0.674632     -0.613797    
         3   -0.448394     -0.229492    
         4   -0.116914     -0.154579    
         5   -0.625950E-03 -0.657041E-01
         6   -0.306937     -0.514811    
         7    0.413435     -0.699658    
         8   -0.970242      0.114839    
         9    0.588020     -0.151749    
        10   -0.296966     -0.118815E-03

  I             A(I)                   L1(A(I))

   1   -0.625950E-03 -0.657041E-01    0.663300E-01
   2   -0.116914     -0.154579        0.271493    
   3   -0.296966     -0.118815E-03    0.297085    
   4   -0.448394     -0.229492        0.677886    
   5    0.588020     -0.151749        0.739769    
   6   -0.306937     -0.514811        0.821748    
   7   -0.970242      0.114839         1.08508    
   8    0.413435     -0.699658         1.11309    
   9    0.674632     -0.613797         1.28843    
  10    0.574661     -0.790899         1.36556    
 
C8VEC_SORT_A_L2_TEST
  C8VEC_SORT_A_L2 sorts a C8VEC by L2 norm.
 
  The unsorted vector
 
         1   -0.756424      0.274021    
         2   -0.256706      0.416528    
         3    0.128749     -0.245557    
         4   -0.261082     -0.307087    
         5   -0.883714E-01  0.383945    
         6    0.297748      0.933274    
         7   -0.328191E-01  0.425689    
         8    0.573176      0.123652    
         9   -0.798300      0.158252    
        10   -0.276473      0.536579    

   I             A(I)                   L2(A(I))

   1    0.128749     -0.245557        0.277263    
   2   -0.883714E-01  0.383945        0.393984    
   3   -0.261082     -0.307087        0.403071    
   4   -0.328191E-01  0.425689        0.426952    
   5   -0.256706      0.416528        0.489278    
   6    0.573176      0.123652        0.586362    
   7   -0.276473      0.536579        0.603617    
   8   -0.756424      0.274021        0.804527    
   9   -0.798300      0.158252        0.813835    
  10    0.297748      0.933274        0.979620    
 
C8VEC_SORT_A_LI_TEST
  C8VEC_SORT_A_LI ascending sorts a C8VEC by Loo norm.
 
  The unsorted vector
 
         1   -0.792012     -0.251363    
         2   -0.269559     -0.290318    
         3    0.305869     -0.470254    
         4    0.587389E-01  0.753014E-01
         5    0.168715      0.213910    
         6    0.372306     -0.525581    
         7    0.156178      0.896573    
         8    0.362443E-01  0.882830E-01
         9    0.134793E-01  0.204294E-02
        10   -0.994304E-01  0.370633    

   I             A(I)                   Loo(A(I))

   1    0.134793E-01  0.204294E-02    0.134793E-01
   2    0.587389E-01  0.753014E-01    0.753014E-01
   3    0.362443E-01  0.882830E-01    0.882830E-01
   4    0.168715      0.213910        0.213910    
   5   -0.269559     -0.290318        0.290318    
   6   -0.994304E-01  0.370633        0.370633    
   7    0.305869     -0.470254        0.470254    
   8    0.372306     -0.525581        0.525581    
   9   -0.792012     -0.251363        0.792012    
  10    0.156178      0.896573        0.896573    
 
C8VEC_SPIRAL_TEST
  C8VEC_SPIRAL returns N points on a spiral
  which includes M complete turns.
 
  The spiral points:
 
         1     5.00000       0.00000    
         2     4.18579       2.41667    
         3     2.33333       4.04145    
         4    0.275546E-15   4.50000    
         5    -2.16667       3.75278    
         6    -3.60844       2.08333    
         7    -4.00000      0.489859E-15
         8    -3.31976      -1.91667    
         9    -1.83333      -3.17543    
        10   -0.642940E-15  -3.50000    
        11     1.66667      -2.88675    
        12     2.74241      -1.58333    
        13     3.00000     -0.734788E-15
 
C8VEC_UNIFORM_01_TEST
  C8VEC_UNIFORM_01 computes a "random" complex vector.
 
  The C8VEC_UNIFORM_01 vector:
 
         1   -0.776876E-01 -0.787825E-01
         2    0.595854E-01  0.849166    
         3   -0.806341      0.522702    
         4    0.146892     -0.292165    
         5   -0.667141E-01 -0.626587E-01
 
C8VEC_UNITY_TEST
  C8VEC_UNITY returns the N roots of unity
 
  The N roots of unity:
 
         1     1.00000       0.00000    
         2    0.866025      0.500000    
         3    0.500000      0.866025    
         4    0.612323E-16   1.00000    
         5   -0.500000      0.866025    
         6   -0.866025      0.500000    
         7    -1.00000      0.122465E-15
         8   -0.866025     -0.500000    
         9   -0.500000     -0.866025    
        10   -0.183697E-15  -1.00000    
        11    0.500000     -0.866025    
        12    0.866025     -0.500000    
 
CARTESIAN_TO_C8_TEST
  CARTESIAN_TO_C8 converts (X,Y) to C8.
 
      X1,Y1=RANDOM_NUMBER    C2=CARTESIAN_TO_C8(X1,Y1)     X3,Y3=C8_TO_CARTESIAN(C2)
     ---------------------     ---------------------     ---------------------
 
        0.3748      0.8702        0.3748      0.8702        0.3748      0.8702
        0.3473      0.2380        0.3473      0.2380        0.3473      0.2380
        0.7974      0.6954        0.7974      0.6954        0.7974      0.6954
        0.6184      0.4046        0.6184      0.4046        0.6184      0.4046
        0.2277      0.4813        0.2277      0.4813        0.2277      0.4813
        0.7062      0.0484        0.7062      0.0484        0.7062      0.0484
        0.6632      0.6321        0.6632      0.6321        0.6632      0.6321
        0.3289      0.1231        0.3289      0.1231        0.3289      0.1231
        0.9202      0.9313        0.9202      0.9313        0.9202      0.9313
        0.2742      0.9120        0.2742      0.9120        0.2742      0.9120
 
POLAR_TO_C8_TEST
  POLAR_TO_C8 converts (R,T) to C8.
 
      (R1,T1)=RANDOM_NUMBER    C2=POLAR_TO_C8(R1,T1)    (R3,T3)=C8_TO_POLAR(C2)
     ---------------------     ---------------------     ---------------------
 
        0.0825      1.1198        0.0360      0.0743        0.0825      1.1198
        0.6550      4.9238        0.1375     -0.6405        0.6550      4.9238
        0.8744      6.2013        0.8714     -0.0715        0.8744      6.2013
        0.7728      5.9520        0.7308     -0.2513        0.7728      5.9520
        0.1426      2.4266       -0.1077      0.0935        0.1426      2.4266
        0.3661      5.0956        0.1369     -0.3396        0.3661      5.0956
        0.6393      5.6593        0.5189     -0.3735        0.6393      5.6593
        0.0885      1.3023        0.0235      0.0853        0.0885      1.3023
        0.1518      2.4370       -0.1157      0.0983        0.1518      2.4370
        0.5045      4.3266       -0.1899     -0.4674        0.5045      4.3266
 
R8_ATAN_TEST
  R8_ATAN computes the arc-tangent given Y and X;
  ATAN2 is the system version of this routine.
 
       X               Y          ATAN2(Y,X)    R8_ATAN(Y,X)
 
     1.00000         0.00000         0.00000         0.00000    
     1.00000         1.00000        0.785398        0.785398    
     0.00000         1.00000         1.57080         1.57080    
    -1.00000         1.00000         2.35619         2.35619    
    -1.00000         0.00000         3.14159         3.14159    
    -1.00000        -1.00000        -2.35619         3.92699    
     0.00000        -1.00000        -1.57080         4.71239    
     1.00000        -1.00000       -0.785398         5.49779    
 
R8POLY2_ROOT_TEST
  R8POLY2_ROOT finds quadratic equation roots.
 
         A         B         C     R1         R2
 
       2.0    -2.0   -24.0   4.00000      -0.00000      -3.00000       0.00000    
       1.0   -20.0   100.0   10.0000      -0.00000       10.0000       0.00000    
       1.0    -2.0    10.0   1.00000       3.00000       1.00000      -3.00000    
 
R8POLY3_ROOT_TEST
  R8POLY3_ROOT finds roots of cubic equations.
 
 
  Polynomial coefficients A, B, C, D:
 
     1.00000      -6.00000       11.0000      -6.00000    
 
  Roots:
 
     1.00000       0.00000    
     3.00000       0.00000    
     2.00000       0.00000    
 
  Polynomial coefficients A, B, C, D:
 
     9.00000      -36.0000       54.0000      -27.0000    
 
  Roots:
 
     1.00000       0.00000    
     1.50000     -0.866025    
     1.50000      0.866025    
 
  Polynomial coefficients A, B, C, D:
 
     1.00000      -5.00000       8.00000      -4.00000    
 
  Roots:
 
     1.00000       0.00000    
     2.00000       0.00000    
     2.00000       0.00000    
 
  Polynomial coefficients A, B, C, D:
 
     1.00000      -8.00000       25.0000      -26.0000    
 
  Roots:
 
     2.00000       0.00000    
     3.00000      -2.00000    
     3.00000       2.00000    
 
R8POLY4_ROOT_TEST
  R8POLY4_ROOT finds roots of quartic equations.
 
 
  A =   1.00000    
  B =  -10.0000    
  C =   35.0000    
  D =  -50.0000    
  E =   24.0000    
 
  Roots:
 
     4.00000       0.00000    
     1.00000       0.00000    
     3.00000       0.00000    
     2.00000       0.00000    
 
  A =   1.00000    
  B =  -5.00000    
  C =   1.00000    
  D =   21.0000    
  E =  -18.0000    
 
  Roots:
 
     3.00000       0.00000    
     3.00000       0.00000    
     1.00000       0.00000    
    -2.00000       0.00000    
 
  A =   1.00000    
  B =  -22.0000    
  C =   141.000    
  D =  -220.000    
  E =   100.000    
 
  Roots:
 
     10.0000       0.00000    
     10.0000       0.00000    
     1.00000       0.00000    
     1.00000       0.00000    
 
  A =   1.00000    
  B =  -16.0000    
  C =   72.0000    
  D =  -128.000    
  E =   80.0000    
 
  Roots:
 
     10.0000       0.00000    
     2.00000       0.00000    
     2.00000       0.00000    
     2.00000       0.00000    
 
  A =   1.00000    
  B =  -20.0000    
  C =   150.000    
  D =  -500.000    
  E =   625.000    
 
  Roots:
 
     5.00000       0.00000    
     5.00000       0.00000    
     5.00000       0.00000    
     5.00000       0.00000    
 
  A =   1.00000    
  B =   2.00000    
  C =   1.00000    
  D =   8.00000    
  E =  -12.0000    
 
  Roots:
 
   -0.166533E-15   2.00000    
   -0.166533E-15  -2.00000    
     1.00000       0.00000    
    -3.00000       0.00000    
 
  A =   1.00000    
  B =   0.00000    
  C =   13.0000    
  D =   0.00000    
  E =   36.0000    
 
  Roots:
 
     0.00000       3.00000    
     0.00000       2.00000    
     0.00000      -2.00000    
    -0.00000      -3.00000    
 
c8lib_test():
  Normal end of execution.
 
 7 December 2023   9:35:53.902 AM
